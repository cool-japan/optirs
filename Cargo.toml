[workspace]
members = [
    "optirs",
    "optirs-core",
    "optirs-gpu",
    "optirs-tpu",
    "optirs-learned",
    "optirs-nas",
    "optirs-bench",
]
resolver = "2"

[workspace.lints.rust]
unused_variables = "allow"
unused_imports = "allow"
mismatched_lifetime_syntaxes = "allow"
dead_code = "allow"
unpredictable_function_pointer_comparisons = "allow"
unknown_lints = "allow"

[workspace.package]
version = "0.1.0-beta.3"
edition = "2021"
authors = ["OptiRS Team"]
description = "Advanced ML optimization and hardware acceleration library"
license = "MIT OR Apache-2.0"
repository = "https://github.com/cool-japan/optirs"
keywords = ["optimization", "machine-learning", "gpu", "tpu", "neural-architecture"]
categories = ["science", "mathematics", "algorithms", "development-tools"]

[workspace.dependencies]
# Core array computing - REMOVED: Use scirs2_core::ndarray_ext instead
# ndarray = { version = "0.16.1", default-features = false, features = ["std", "serde", "rayon"] }
# ndarray-stats = "0.6.0"
# ndarray-rand = "0.15.0"

# üö® FORBIDDEN DEPENDENCIES REMOVED - Use SciRS2-Core abstractions instead
# num-traits - Use scirs2_core::numeric
# num-complex - Use scirs2_core::numeric
# num-integer - Use scirs2_core::numeric
# rayon - Use scirs2_core::parallel_ops
# wide - Use scirs2_core::simd_ops
# rand, rand_distr, rand_core - Use scirs2_core::random
# fastrand - Use scirs2_core::random
# ndarray, ndarray-stats, ndarray-rand - Use scirs2_core::ndarray

# System utilities (allowed - not scientific computing)
num_cpus = "1.17.0"

# Development and testing
thiserror = "2.0.17"
anyhow = "1.0"
approx = "0.5.1"
criterion = "0.7.0"
once_cell = "1.21.3"
tempfile = "3.23.0"
tokio-test = "0.4.4"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
bincode = "2.0.1"
chrono = "0.4.42"

# GPU backends - cross-platform only
cudarc = { version = "0.17", features = ["cuda-12000"] }
opencl3 = { version = "0.12" }
wgpu = { version = "27.0" }
pollster = { version = "0.4" }

# ML specific
tokenizers = "0.22.1"
autograd = "1.1.1"
smallvec = "1.15.1"
uuid = { version = "1.18.1", features = ["v4"] }
rustc-hash = "2.1.1"
matrixmultiply = "0.3.10"

# System information
sysinfo = "0.37.2"

# Async dependencies
tokio = { version = "1.47.1", features = ["full"] }
futures = "0.3.31"
futures-util = "0.3.31"
async-trait = "0.1.89"

# Logging
log = "0.4"

# Utilities
sha2 = "0.10"
md5 = "0.8.0"
clap = { version = "4.5", features = ["derive"] }
regex = "1.12.1"

# Cryptography
rsa = { version = "0.9" }
x509-parser = { version = "0.18" }

# OptiRS crates
optirs-core = { version = "0.1.0-beta.3", path = "./optirs-core" }
optirs-gpu = { version = "0.1.0-beta.3", path = "./optirs-gpu" }
optirs-tpu = { version = "0.1.0-beta.3", path = "./optirs-tpu" }
optirs-learned = { version = "0.1.0-beta.3", path = "./optirs-learned" }
optirs-nas = { version = "0.1.0-beta.3", path = "./optirs-nas" }
optirs-bench = { version = "0.1.0-beta.3", path = "./optirs-bench" }

# üö® CRITICAL: SciRS2 ECOSYSTEM DEPENDENCIES üö®
#
# OptiRS MUST use SciRS2 as its scientific computing foundation.
# This section implements minimal dependency policy as per SCIRS2_INTEGRATION_POLICY.md
#
# PHILOSOPHY: OptiRS is an OPTIMIZATION library, not an autodiff framework.
# Start minimal - add dependencies only when compilation errors prove necessity.
#
# ‚úÖ ESSENTIAL (Always Required):
scirs2-core = "0.1.0-rc.2"           # FOUNDATION - Core scientific primitives
scirs2-optimize = "0.1.0-rc.2"       # ESSENTIAL - Base optimization interfaces

# ‚ö†Ô∏è EVIDENCE-BASED (Added because compilation errors prove necessity):
scirs2-neural = "0.1.0-rc.2"         # EVIDENCE: neuromorphic/spike_based.rs requires this
scirs2-metrics = "0.1.0-rc.2"        # EVIDENCE: benchmarking and monitoring require this
scirs2-stats = "0.1.0-rc.2"          # EVIDENCE: multiple modules use distributions
scirs2-series = "0.1.0-rc.2"         # EVIDENCE: performance_tracking.rs requires this
scirs2-datasets = "0.1.0-rc.2"       # EVIDENCE: cross_platform_tester.rs requires this

# ‚ö†Ô∏è CONDITIONAL (Uncomment only if compilation fails):
# scirs2-linalg = "0.1.0-rc.2"       # Only if second-order methods need matrix ops beyond ndarray
# scirs2-signal = "0.1.0-rc.2"       # Only if gradient smoothing specifically requires it

# ‚ùå NOT REQUIRED for OptiRS:
# scirs2-autograd - OptiRS receives pre-computed gradients, doesn't compute them
# TODO: Remove scirs2-autograd usage from optirs-core/src/optimizers/adam.rs

[profile.release]
opt-level = 3
lto = false
codegen-units = 1

[profile.dev]
opt-level = 0

[profile.test]
opt-level = 0

[profile.bench]
opt-level = 3
